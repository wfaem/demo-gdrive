import{jsx as o,jsxs as E}from"@dropins/tools/preact-jsx-runtime.js";import{Slot as Z,classes as $}from"@dropins/tools/lib.js";import{v as k,u as W,a as S}from"../chunks/usePasswordValidationMessage.js";import"@dropins/tools/event-bus.js";import"@dropins/tools/recaptcha.js";import{a as O}from"../chunks/getCustomerToken.js";import{r as g}from"../chunks/resetPassword.js";import{c as B,g as R,u as C,T as tt,F as et,B as at}from"../chunks/useInLineAlert.js";import{useState as h,useEffect as H,useCallback as I}from"@dropins/tools/preact-hooks.js";import{useText as K}from"@dropins/tools/i18n.js";import{InLineAlert as st,InputPassword as rt}from"@dropins/tools/components.js";import"../chunks/getStoreConfig.js";import"../chunks/network-error.js";import"@dropins/tools/fetch-graphql.js";import"../chunks/initialize.js";import"../chunks/setReCaptchaToken.js";import"@dropins/tools/preact-compat.js";const J=(u,l)=>u.split("&").filter(r=>r.includes(l)).map(r=>r.split("=")[1])[0],it=({isEmailConfirmationRequired:u,signInOnSuccess:l,passwordConfigs:t,routeRedirectOnSignIn:r,routeWrongUrlRedirect:f,onErrorCallback:a,onSuccessCallback:i,handleSetInLineAlertProps:d,routeRedirectOnPasswordUpdate:w,routeSignInPage:m})=>{const s=K({errorNotification:"Auth.Notification.errorNotification",updatePasswordMessage:"Auth.Notification.updatePasswordMessage",updatePasswordActionMessage:"Auth.Notification.updatePasswordActionMessage",customerTokenErrorMessage:"Auth.Api.customerTokenErrorMessage"}),[U,y]=h({userName:"",status:!1}),[F,_]=h(""),[L,x]=h(!1),[P,T]=h(""),[N,b]=h(""),[M,n]=h(!1),[A,v]=h(!1),[q,D]=h([]);H(()=>{L&&!q.length&&(F.length?v(!1):v(!0))},[L,F,q]),H(()=>{const{search:p}=window.location;!p.includes("token=")&&!p.includes("email=")&&B(f)&&(window.location.href=f());const e=decodeURIComponent(p),V=J(e,"token"),j=J(e,"email");T(j),b(V)},[f]);const Q=I(async p=>{p.preventDefault(),n(!0),D([]);const e=R(p.target),V=(e==null?void 0:e.password)&&P&&N;e!=null&&e.password||(v(!0),n(!1));const j=(t==null?void 0:t.requiredCharacterClasses)??0,Y=(t==null?void 0:t.minLength)??0;if(!k(e==null?void 0:e.password,j)||e.password.length<+Y){x(!0),n(!1);return}if(!V){d({type:"error",text:s.errorNotification}),n(!1);return}const{message:G,success:z}=await g(P,N,e.password);if(z){if(u||!u&&!l){i==null||i(),B(w)&&(window.location.href=w()),x(!0),n(!1),v(!1),_(""),D([{label:s.updatePasswordActionMessage,onClick:()=>{window.location.href=m==null?void 0:m()}}]),d({type:"success",text:s.updatePasswordMessage});return}const c=await O({email:P,password:e.password,handleSetInLineAlertProps:d,onErrorCallback:a,translations:s});c!=null&&c.userName&&(i==null||i(c==null?void 0:c.userName),B(r)?window.location.href=r():y({userName:c==null?void 0:c.userName,status:!0}))}else d({type:"error",text:G}),a==null||a({message:G,success:z});n(!1)},[P,N,t==null?void 0:t.requiredCharacterClasses,t==null?void 0:t.minLength,s,u,l,m,a,i,r,d,w]),X=I(p=>{_(p)},[]);return{additionalActionsAlert:q,passwordError:A,isSuccessful:U,updatePasswordValue:F,isClickSubmit:L,isLoading:M,submitUpdatePassword:Q,handleSetUpdatePasswordValue:X}},ot=({signInOnSuccess:u=!0,formSize:l="default",routeRedirectOnSignIn:t,routeWrongUrlRedirect:r,routeSignInPage:f,slots:a,onErrorCallback:i,onSuccessCallback:d,routeRedirectOnPasswordUpdate:w})=>{const m=K({title:"Auth.UpdatePasswordForm.title",buttonPrimary:"Auth.UpdatePasswordForm.buttonPrimary",placeholder:"Auth.InputPassword.placeholder",floatingLabel:"Auth.InputPassword.floatingLabel"}),{passwordConfigs:s,isEmailConfirmationRequired:U}=W(),{inLineAlertProps:y,handleSetInLineAlertProps:F}=C(),{additionalActionsAlert:_,passwordError:L,isSuccessful:x,updatePasswordValue:P,isClickSubmit:T,isLoading:N,submitUpdatePassword:b,handleSetUpdatePasswordValue:M}=it({isEmailConfirmationRequired:U,signInOnSuccess:u,passwordConfigs:s,routeRedirectOnSignIn:t,routeWrongUrlRedirect:r,onErrorCallback:i,onSuccessCallback:d,handleSetInLineAlertProps:F,routeRedirectOnPasswordUpdate:w,routeSignInPage:f}),{isValidUniqueSymbols:n,defaultLengthMessage:A}=S({password:P,isClickSubmit:T,passwordConfigs:s});return x.status&&(a!=null&&a.SuccessNotification)?o(Z,{"data-testid":"successNotificationTestId",name:"SuccessNotification",slot:a==null?void 0:a.SuccessNotification,context:{isSuccessful:x}}):E("div",{className:$(["auth-updatePasswordForm",l]),children:[o(tt,{text:m.title,bottomLine:!1,className:"auth-updatePasswordForm__title"}),y.text?o(st,{className:"auth-updatePasswordForm__notification",variant:"secondary",heading:y.text,icon:y.icon,additionalActions:_}):null,E(et,{name:"updatePassword_form",className:"auth-updatePasswordForm__form",submitCallback:b,isLoading:N,fieldsConfig:[],children:[o("div",{style:"display: none;",children:o("input",{type:"text",id:"username",name:"username",autoComplete:"username"})}),o(rt,{defaultValue:P,onValue:M,className:"auth-updatePasswordForm__form__item",autoComplete:"new-password",name:"password",error:L||n==="error"||(A==null?void 0:A.status)==="error",minLength:s==null?void 0:s.minLength,uniqueSymbolsStatus:n,validateLengthConfig:A,requiredCharacterClasses:s==null?void 0:s.requiredCharacterClasses,placeholder:m.placeholder,floatingLabel:m.floatingLabel}),o("div",{className:"auth-updatePasswordForm__button",children:o(at,{type:"submit",buttonText:m.buttonPrimary,variant:"primary",enableLoader:N})})]})]})},_t=({slots:u,formSize:l,signInOnSuccess:t,routeRedirectOnPasswordUpdate:r,routeRedirectOnSignIn:f,routeSignInPage:a,routeWrongUrlRedirect:i,onErrorCallback:d,onSuccessCallback:w})=>o("div",{className:"auth-update-password",children:o(ot,{formSize:l,signInOnSuccess:t,routeSignInPage:a,routeRedirectOnSignIn:f,routeWrongUrlRedirect:i,onErrorCallback:d,onSuccessCallback:w,slots:u,routeRedirectOnPasswordUpdate:r})});export{_t as UpdatePassword,_t as default};
